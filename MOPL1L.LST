Turbo Assembler	 Version 3.1	    02/09/22 13:16:49	    Page 1
mopl1l.asm



      1					 ;*********************************************************
      2					 ; Процедуры для учебного примера лабораторной работы N	1  *
      3					 ; по МОП.						   *
      4					 ;*********************************************************
      5
      6	    0000			 .MODEL	SMALL
      7	    0000			 .CODE
      8					 .386
      9					  INCLUDE MOPL1.INC
1    10					 ;*********************************************************
1    11					 ; Константы для учебного примера лабораторной работы N	1  *
1    12					 ; по МОП.						   *
1    13					 ;*********************************************************
1    14
1    15		  =001B			 CHESC	 = 1Bh
1    16		  =000D			 CHCR	 = 13
1    17		  =003D			 CHSEP	 = '='
1    18		  =0060			 CHCOMMA = '`'
1    19		  =000A			 CHLF	 = 10
1    20		  =0021			 DOSFU	 = 21h
1    21		  =0002			 FUPUTC	 = 2
1    22		  =0008			 FUGETCH = 8
1    23		  =000A			 FUGETS	 = 0Ah
1    24		  =004C			 FUEXIT	 = 4Ch
1    25		  =0000			 PAUSE_L = 0000	 ; Младшее слово стартового значения паузы
1    26		  =0000			 PAUSE_H = 0	 ; Старшее слово
1    27		  =0012			 LENNUM	 = 18	 ; Число символов в строке десятичного числа
1    28		  =0009			 LENPACK = 9	 ; Упаковонное в два раза короче
1    29
1    30
     31					  LOCALS
     32					 ;=====================================================
     33					 ; Подпрограмма	вывода на экран	строки,	адресуемой SI,
     34					 ; с задержкой времени между символами в <CX,DX> mcs.
     35					 ; Завершителями строки	являеются байты	0 или 0FFh.
     36					 ; ЕСЛИ	строка заканчивается байтом 0,
     37					 ;   ТО	добавляется переход в начало новой строки
     38					 ;
     39					 ;=====================================================
     40	    0000			 PUTSS	 PROC	 NEAR
     41	    0000  8A 04			 @@L:	 MOV	 AL,	 [SI]
     42	    0002  3C FF				 CMP	 AL,	 0FFH
     43	    0004  74 1B	90 90			 JE	 @@R
     44	    0008  3C 00				 CMP	 AL,	 0
     45	    000A  74 0B	90 90			 JZ	 @@E
     46	    000E  E8 0011			 CALL	 PUTC
     47	    0011  46				 INC	 SI
     48	    0012  E8 00B8			 CALL	 DILAY
     49	    0015  EB E9				 JMP	 SHORT @@L
     50						 ; Переход на следующую	строку
     51	    0017  B0 0D			 @@E:	 MOV	 AL, CHCR
     52	    0019  E8 0006			 CALL	 PUTC
     53	    001C  B0 0A				 MOV	 AL, CHLF
     54	    001E  E8 0001			 CALL	 PUTC
     55	    0021  C3			 @@R:	 RET
     56	    0022			 PUTSS	 ENDP
     57
Turbo Assembler	 Version 3.1	    02/09/22 13:16:49	    Page 2
mopl1l.asm



     58					 ;==============================================
     59					 ; Подпрограмма	вывода AL на терминал
     60					 ;==============================================
     61	    0022			 PUTC	 PROC	 NEAR
     62	    0022  52				 PUSH	 DX
     63	    0023  8A D0				 MOV	 DL,   AL
     64	    0025  B4 02				 MOV	 AH,   FUPUTC
     65	    0027  CD 21				 INT	 DOSFU
     66	    0029  5A				 POP	 DX
     67	    002A  C3				 RET
     68	    002B			 PUTC	 ENDP
     69
     70					 ;==============================================
     71					 ; Подпрограмма	ввода символа в	AL с терминала
     72					 ;==============================================
     73	    002B			 GETCH	 PROC	 NEAR
     74	    002B  B4 08				 MOV	 AH,   FUGETCH
     75	    002D  CD 21				 INT	 DOSFU
     76	    002F  E8 FFF0				 call PUTC
     77	    0032  C3				 RET
     78	    0033			 GETCH	 ENDP
     79
     80					 ;=================================================
     81					 ; Подпрограмма	ввода строки в буфер, адресуемый DX
     82					 ;   и имеющий структуру:
     83					 ;    {	char size; // размер буфера
     84					 ;	char len;  // реально введено
     85					 ;	char str[size];	// символы строки }
     86					 ;=================================================
     87	    0033			 GETS	 PROC	 NEAR
     88	    0033  56				 PUSH	 SI
     89	    0034  8B F2				 MOV	 SI,	 DX
     90	    0036  B4 0A				 MOV	 AH,	 FUGETS
     91	    0038  CD 21				 INT	 DOSFU
     92						 ; прописать байт 0 в конец строки
     93	    003A  32 E4				 XOR	 AH,	 AH
     94	    003C  8A 44	01			 MOV	 AL,	 [SI+1]
     95	    003F  03 F0				 ADD	 SI,	 AX
     96	    0041  C6 44	02 00			 MOV	 BYTE PTR [SI+2], 0
     97	    0045  5E				 POP	 SI
     98	    0046  C3				 RET
     99	    0047			 GETS	 ENDP
    100
    101					 ;==============================================
    102					 ; Подпрограмма	подсчета числа символов	в строке,
    103					 ; адресуемой SI. Завершители строки: 0	и 0FFh
    104					 ; Результат возвращается в AX
    105					 ;==============================================
    106	    0047			 SLEN	 PROC	 NEAR
    107	    0047  33 C0				 XOR	 AX,   AX
    108	    0049  80 3C	00		 LSLEN:	 CMP	 BYTE PTR [SI],	0
    109	    004C  74 0D	90 90			 JE	 RSLEN
    110	    0050  80 3C	FF			 CMP	 BYTE PTR [SI],	0FFh
    111	    0053  74 06	90 90			 JE	 RSLEN
    112	    0057  40				 INC	 AX
    113	    0058  46				 INC	 SI
    114	    0059  EB EE				 JMP	 SHORT	 LSLEN
Turbo Assembler	 Version 3.1	    02/09/22 13:16:49	    Page 3
mopl1l.asm



    115	    005B  C3			 RSLEN:	 RET
    116	    005C			 SLEN	 ENDP
    117
    118					 ;====================================================
    119					 ; Подпрограмма	преобразования <EDX,EAX> в беззнаковое
    120					 ; десятичное, размещаемое по адресу DI
    121					 ;==============================================
    122	    005C				 .DATA
    123	    0000  0000000000000000	 UBINARY DQ	 0  ; Исходное двоичное	64-разрядное
    124	    0008  00000000000000000000	 UPACK	 DT	 0  ; Упакованные 18 десятичных	цифр
    125	    0012				 .CODE
    126	    005C			 UTOA10	 PROC	 NEAR
    127	    005C  51				 PUSH	 CX
    128	    005D  57				 PUSH	 DI
    129	    005E  66| A3 0000r			 MOV	 DWORD PTR [UBINARY],	EAX
    130	    0062  66| 89 16 0004r		 MOV	 DWORD PTR [UBINARY+4],	EDX
    131	    0067  9B DB	E3			 FINIT			 ; инициализация сопроцессора
    132	    006A  DF 2E	0000r			 FILD	 UBINARY	 ; забрасывание	в него бинарного
    133	    006E  DF 36	0008r			 FBSTP	 UPACK		 ; извлечение упаковонного десятичного
    134	    0072  B9 0009			 MOV	 CX,	 LENPACK ; получено 9 пар цифр
    135	    0075  1E				 PUSH	 DS		 ; писать
    136	    0076  07				 POP	 ES		 ;   будем
    137	    0077  FC				 CLD			 ;     через stosw
    138	    0078  BE 0008r			 LEA	 SI,	 UPACK	 ;     с конца
    139	    007B  83 C6	09			 ADD	 SI,	 LENPACK ;     буфера upack
    140						 ; Цикл	преобразования пар полубайтов в	ASCII-коды цифр
    141	    007E  33 C0			 @@L:	 XOR	 AX,	 AX
    142	    0080  4E				 DEC	 SI
    143	    0081  8A 04				 MOV	 AL,	 [SI]
    144	    0083  C1 E0	04			 SHL	 AX,	 4
    145	    0086  C0 E8	04			 SHR	 AL,	 4
    146	    0089  05 3030			 ADD	 AX,	 3030h
    147	    008C  86 C4				 XCHG	 AL,	 AH
    148	    008E  AB				 STOSW
    149	    008F  E2 ED				 LOOP	 @@L
    150						 ; Фиксация конца строки
    151	    0091  32 C0				 XOR	 AL,	 AL
    152	    0093  AA				 STOSB
    153						 ; Улучшим читабельность слишком длинного числа
    154	    0094  FC				 CLD
    155	    0095  B8 000E			 MOV	 AX,	 LENNUM-4
    156	    0098  8B C8			 @@L1:	 MOV	 CX,	 AX
    157	    009A  5F				 POP	 DI	    ; встаем на	начало строки
    158	    009B  57				 PUSH	 DI
    159	    009C  8B F7				 MOV	 SI,	 DI
    160	    009E  46				 INC	 SI
    161	    009F  F3> A4			 REP	 MOVSB
    162	    00A1  C6 05	60			 MOV	 BYTE PTR [DI],	CHCOMMA	; вставить разделитель троек цифр
    163	    00A4  2D 0004			 SUB	 AX,	 4  ;	  3 цифры + разделитель	обработаны
    164	    00A7  78 04	90 90			 JS	 @@E	    ; прекратить, если осталось	не больше 3-х цифр
    165	    00AB  EB EB				 JMP	 SHORT	 @@L1
    166	    00AD  5E			 @@E:	 POP	 SI
    167	    00AE  56				 PUSH	 SI
    168	    00AF  33 C9				 XOR	 CX,	 CX
    169						 ; Съедаем первые нули
    170						 ;   сначала подсчитываем
    171	    00B1  80 3C	30		 @@L2:	 CMP	 BYTE PTR [SI],	'0'
Turbo Assembler	 Version 3.1	    02/09/22 13:16:49	    Page 4
mopl1l.asm



    172	    00B4  74 09	90 90			 JE	 @@N
    173	    00B8  80 3C	60			 CMP	 BYTE PTR [SI],	CHCOMMA
    174	    00BB  75 06	90 90			 JNE	 @@N1
    175	    00BF  41			 @@N:	 INC	 CX
    176	    00C0  46				 INC	 SI
    177	    00C1  EB EE				 JMP	 SHORT	 @@L2
    178	    00C3			 @@N1:	 ;   а теперь съедаем
    179	    00C3  5F				 POP	 DI
    180	    00C4  83 E9	13			 SUB	 CX, LENNUM+1
    181	    00C7  F7 D9				 NEG	 CX
    182	    00C9  F3> A4			 REP	 MOVSB
    183	    00CB  59				 POP	 CX
    184	    00CC  C3				 RET
    185	    00CD			 UTOA10	 ENDP
    186
    187					 ;==============================================
    188					 ; Подпрограмма	задержки выполнения программы
    189					 ; на <CX,DX> микросекунд
    190					 ;==============================================
    191	    00CD			 DILAY	 PROC	 NEAR
    192	    00CD  B4 86				 MOV	 AH,	 86h
    193	    00CF  CD 15				 INT	 15h
    194	    00D1  C3				 RET
    195	    00D2			 DILAY	 ENDP
    196
    197					 ;==============================================
    198					 ; Вывод числа в 2ичной	системе	исчисления
    199					 ; число должно	лежать в ebx
    200					 ;==============================================
    201
    202
    203						 PUBLIC	 PUTSS,	PUTC, GETCH, GETS, DILAY, SLEN,	UTOA10
    204
    205						 END
Turbo Assembler	 Version 3.1	    02/09/22 13:16:49	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/09/22"
??FILENAME			  Text	 "mopl1l  "
??TIME				  Text	 "13:16:48"
??VERSION			  Number 030A
@32BIT				  Text	 0
@@E				  Near	 _TEXT:0017
@@E				  Near	 _TEXT:00AD
@@L				  Near	 _TEXT:0000
@@L				  Near	 _TEXT:007E
@@L1				  Near	 _TEXT:0098
@@L2				  Near	 _TEXT:00B1
@@N				  Near	 _TEXT:00BF
@@N1				  Near	 _TEXT:00C3
@@R				  Near	 _TEXT:0021
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MOPL1L
@INTERFACE			  Text	 00H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CHCOMMA				  Number 0060
CHCR				  Number 000D
CHESC				  Number 001B
CHLF				  Number 000A
CHSEP				  Number 003D
DILAY				  Near	 _TEXT:00CD
DOSFU				  Number 0021
FUEXIT				  Number 004C
FUGETCH				  Number 0008
FUGETS				  Number 000A
FUPUTC				  Number 0002
GETCH				  Near	 _TEXT:002B
GETS				  Near	 _TEXT:0033
LENNUM				  Number 0012
LENPACK				  Number 0009
LSLEN				  Near	 _TEXT:0049
PAUSE_H				  Number 0000
PAUSE_L				  Number 0000
PUTC				  Near	 _TEXT:0022
PUTSS				  Near	 _TEXT:0000
RSLEN				  Near	 _TEXT:005B
SLEN				  Near	 _TEXT:0047
UBINARY				  Qword	 DGROUP:0000
UPACK				  Tbyte	 DGROUP:0008
UTOA10				  Near	 _TEXT:005C
Turbo Assembler	 Version 3.1	    02/09/22 13:16:49	    Page 6
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0012 Word	  Public  DATA
_TEXT				  16  00D2 Word	  Public  CODE
